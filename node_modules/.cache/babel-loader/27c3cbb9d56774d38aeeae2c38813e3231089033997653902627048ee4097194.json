{"ast":null,"code":"var _jsxFileName = \"/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\nexport default function App() {\n  _s();\n  const [objectsArray, setObjectsArray] = useState([]);\n  const [filteredObjectsArray, setfilteredObjectsArray] = useState([]);\n  const [tableDataColoredCells, settableDataColoredCells] = useState([]);\n  const colorIdents = [{\n    ident: 'un',\n    props: {\n      color: 'red'\n    }\n  }, {\n    ident: 'deux',\n    props: {\n      color: 'green'\n    }\n  }, {\n    ident: 'trois',\n    props: {\n      color: 'blue'\n    }\n  }];\n  useEffect(() => {\n    const newArray = [];\n    const numberOfObjects = 5;\n    for (let i = 1; i <= numberOfObjects; i++) {\n      let randomIdentForObject = randomColorIdentifier(colorIdents);\n      newArray.push({\n        id: makeUniqueId('random', i.toString()),\n        name: '',\n        description: '',\n        colorIdentifier: randomIdentForObject\n      });\n    }\n    setfilteredObjectsArray([...newArray]);\n    setObjectsArray([...newArray]);\n  }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n  const getRandomNumber = () => {\n    const randomDecimal = Math.random();\n\n    // Scale the random decimal to the range [0, 1, 2]\n    const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n    return randomNumber;\n  };\n  const makeUniqueId = (base, i) => `${base}-${i}`;\n\n  // vyresit colors: any - zkusit nadefinovat vlastni typ\n  const randomColorIdentifier = colors => {\n    let randomArrayIndex = getRandomNumber();\n    // nekontroluju delku pole, vim, ze se vejdu\n    return colors[randomArrayIndex].ident;\n  };\n\n  // filtruju podle barevneho identifikatoru\n  const handleInputFilter = inputValue => {\n    inputValue = inputValue.replace(/\\s/g, ''); // odstranim mezery\n    console.log('text z inputu: ' + inputValue);\n\n    // include asi snazsi, dalo by se dotahnout do lepsiho stavu\n    // const filteredResult = objectsArray.filter((item) =>\n    //     item.colorIdentifier.toLowerCase().includes(inputValue.toLowerCase())\n    // );\n\n    // metoda filtr mi vrati pouze elementy, ktere splni podminku\n    const filteredResult = objectsArray.filter(item =>\n    // object.values spolecne se some projde kazdy prop objektu (vytvori se pole hodnot)\n    Object.values(item).some(property => typeof property === 'string' && property.toLowerCase().includes(inputValue.toLowerCase())));\n    setfilteredObjectsArray(filteredResult);\n  };\n  const handleTableDataClick = target => {\n    let cellColorIdent = target.parentElement.className;\n    let cellColor = '';\n    let cellRowId = target.parentElement.getAttribute(\"data-row-id\");\n    let currentCellsIds = [...tableDataColoredCells];\n    colorIdents.filter(iden => {\n      if (iden.ident === cellColorIdent) {\n        cellColor = iden.props.color;\n      }\n    });\n    if (target.style.backgroundColor == 'white' || target.getAttribute(\"style\") == null) {\n      // barevne\n      target.style.backgroundColor = cellColor;\n      currentCellsIds = [...currentCellsIds, cellRowId];\n      settableDataColoredCells(currentCellsIds);\n    } else {\n      // NEbarevne\n      target.style.backgroundColor = 'white';\n    }\n    console.log(\"cellRowId: \" + cellRowId);\n  };\n  console.log(objectsArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      className: \"input-filtr\",\n      onChange: e => handleInputFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"mainDataTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"N\\xE1zev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Popis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Barevn\\xFD identifik\\xE1tor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredObjectsArray.map(object => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: object.colorIdentifier,\n          \"data-row-id\": object.id,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: e => handleTableDataClick(e.target),\n            children: object.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: e => handleTableDataClick(e.target),\n            children: object.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: e => handleTableDataClick(e.target),\n            children: object.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: e => handleTableDataClick(e.target),\n            children: object.colorIdentifier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, object.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"xRznzwIcXUWu/O+sTH8KTpBsEAc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","objectsArray","setObjectsArray","filteredObjectsArray","setfilteredObjectsArray","tableDataColoredCells","settableDataColoredCells","colorIdents","ident","props","color","newArray","numberOfObjects","i","randomIdentForObject","randomColorIdentifier","push","id","makeUniqueId","toString","name","description","colorIdentifier","getRandomNumber","randomDecimal","Math","random","randomNumber","floor","base","colors","randomArrayIndex","handleInputFilter","inputValue","replace","console","log","filteredResult","filter","item","Object","values","some","property","toLowerCase","includes","handleTableDataClick","target","cellColorIdent","parentElement","className","cellColor","cellRowId","getAttribute","currentCellsIds","iden","style","backgroundColor","children","type","onChange","e","value","fileName","_jsxFileName","lineNumber","columnNumber","map","object","onClick","_c","$RefreshReg$"],"sources":["/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ntype ObjectType = {\n    id: string;\n    name: string,\n    description: string,\n    colorIdentifier: string,\n    // zde pridat dalsi props\n}\n\ntype CellType = {\n\n}\n\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\n   \n\nexport default function App() {\n\n    const [objectsArray, setObjectsArray] = useState<ObjectType[]>([]);\n    const [filteredObjectsArray, setfilteredObjectsArray] = useState<ObjectType[]>([]);\n    const [tableDataColoredCells, settableDataColoredCells] = useState<string[]>([]);\n\n    const colorIdents = [{\n        ident: 'un',\n        props: {\n            color: 'red'\n        }\n    }, {\n        ident: 'deux',\n        props: {\n            color: 'green'\n        }\n    }, {\n        ident: 'trois',\n        props: {\n            color: 'blue'\n        }\n    }]\n\n    useEffect(() => {\n\n        const newArray: ObjectType[] = [];\n        const numberOfObjects = 5;\n        \n        for (let i = 1; i <= numberOfObjects; i++) {\n            let randomIdentForObject: string = randomColorIdentifier(colorIdents);\n\n            newArray.push({\n                id: makeUniqueId('random', i.toString()),\n                name: '',\n                description: '',\n                colorIdentifier: randomIdentForObject,\n            });\n        }\n\n        setfilteredObjectsArray([...newArray]);\n        setObjectsArray([...newArray]);\n\n    }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n    const getRandomNumber = (): number => {\n        const randomDecimal = Math.random();\n      \n        // Scale the random decimal to the range [0, 1, 2]\n        const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n        return randomNumber;\n    };\n\n    const makeUniqueId = (base: String, i: String) => `${base}-${i}`;\n\n    // vyresit colors: any - zkusit nadefinovat vlastni typ\n    const randomColorIdentifier = (colors: any) => {\n        let randomArrayIndex = getRandomNumber();\n        // nekontroluju delku pole, vim, ze se vejdu\n        return colors[randomArrayIndex].ident;\n    }    \n\n    // filtruju podle barevneho identifikatoru\n    const handleInputFilter = (inputValue: string) => {\n        inputValue = inputValue.replace(/\\s/g, ''); // odstranim mezery\n        console.log('text z inputu: ' + inputValue);\n\n        // include asi snazsi, dalo by se dotahnout do lepsiho stavu\n        // const filteredResult = objectsArray.filter((item) =>\n        //     item.colorIdentifier.toLowerCase().includes(inputValue.toLowerCase())\n        // );\n\n        // metoda filtr mi vrati pouze elementy, ktere splni podminku\n        const filteredResult = objectsArray.filter((item) => \n            // object.values spolecne se some projde kazdy prop objektu (vytvori se pole hodnot)\n            Object.values(item).some((property) =>\n            typeof property === 'string' && property.toLowerCase().includes(inputValue.toLowerCase())\n            )\n        );\n\n        setfilteredObjectsArray(filteredResult);\n    }\n\n    const handleTableDataClick = (target: any) => {\n        let cellColorIdent: string = target.parentElement.className;\n        let cellColor: string = '';\n        let cellRowId: string = target.parentElement.getAttribute(\"data-row-id\");\n        let currentCellsIds: string[] = [...tableDataColoredCells];\n\n        colorIdents.filter(iden => {\n            if ( iden.ident === cellColorIdent ) {\n                cellColor = iden.props.color\n            }\n        });\n\n        if ( target.style.backgroundColor == 'white' || target.getAttribute(\"style\") == null ) {\n            // barevne\n            target.style.backgroundColor = cellColor;\n            currentCellsIds = [...currentCellsIds, cellRowId]\n\n            settableDataColoredCells(currentCellsIds);\n\n        }\n        else {\n            // NEbarevne\n            target.style.backgroundColor = 'white';\n        }\n\n        console.log(\"cellRowId: \" + cellRowId);\n    };\n\n    console.log(objectsArray);\n\n    return (\n        <div className='wrapper'>\n            <input type=\"text\" name=\"\" id=\"\" className='input-filtr' onChange={(e) => handleInputFilter(e.target.value)} />\n            {/* <p id=\"coloredCells\">\n                {tableDataColoredCells.map(dataCell => {\n\n                })}\n            </p> */}\n\n            <table id='mainDataTable'>\n\n                <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Název</th>\n                        <th>Popis</th>\n                        <th>Barevný identifikátor</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n\n                    {filteredObjectsArray.map((object) => (\n                        <tr className={object.colorIdentifier} data-row-id={object.id} key={object.id}>\n                            <td onClick={(e) => handleTableDataClick(e.target)}>{object.id}</td>\n                            <td onClick={(e) => handleTableDataClick(e.target)}>{object.name}</td>\n                            <td onClick={(e) => handleTableDataClick(e.target)}>{object.description}</td>\n                            <td onClick={(e) => handleTableDataClick(e.target)}>{object.colorIdentifier}</td>\n                        </tr>\n                    ))}\n\n                </tbody>\n\n            </table>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}