{"ast":null,"code":"var _jsxFileName = \"/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\nexport default function App() {\n  _s();\n  const [objectsArray, setObjectsArray] = useState([]);\n  const colorIdents = [{\n    ident: 'un',\n    props: {\n      color: 'red'\n    }\n  }, {\n    ident: 'deux',\n    props: {\n      color: 'green'\n    }\n  }, {\n    ident: 'trois',\n    props: {\n      color: 'blue'\n    }\n  }];\n  const getRandomNumber = () => {\n    const randomDecimal = Math.random();\n\n    // Scale the random decimal to the range [0, 1, 2]\n    const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n\n    return randomNumber;\n  };\n  useEffect(() => {\n    const makeUniqueId = (base, i) => `${base}-${i}`;\n    let randomIdentForObject = '';\n\n    // vyresit colors: any - zkusit nadefinovat vlastni typ\n    const randomColorIdentifier = colors => {\n      let randomArrayIndex = getRandomNumber();\n      // nekontroluju delku pole, vim, ze se vejdu\n      return colors[randomArrayIndex].ident;\n    };\n    const newArray = [];\n    const numberOfObjects = 5;\n    randomIdentForObject = randomColorIdentifier(colorIdents);\n    for (let i = 1; i <= numberOfObjects; i++) {\n      newArray.push({\n        id: makeUniqueId('random', i.toString()),\n        name: '',\n        description: '',\n        colorIdentifier: randomIdentForObject\n      });\n    }\n    setObjectsArray([...newArray]);\n  }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n  console.log(objectsArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Objects:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: objectsArray.map(object => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [object.id, \" / \", object.name, \" / \", object.description, \" / \", object.colorIdentifier]\n      }, object.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"j6iRF3X2vF2z8Z/xVmpr9EaV7SE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","objectsArray","setObjectsArray","colorIdents","ident","props","color","getRandomNumber","randomDecimal","Math","random","randomNumber","floor","makeUniqueId","base","i","randomIdentForObject","randomColorIdentifier","colors","randomArrayIndex","newArray","numberOfObjects","push","id","toString","name","description","colorIdentifier","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","object","_c","$RefreshReg$"],"sources":["/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Console } from 'console';\n\ntype ObjectType = {\n    id: string;\n    name: string,\n    description: string,\n    colorIdentifier: string,\n    // zde pridat dalsi props\n}\n\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\n   \n\nexport default function App() {\n\n    const [objectsArray, setObjectsArray] = useState<ObjectType[]>([]); \n\n    const colorIdents = [{\n        ident: 'un',\n        props: {\n            color: 'red'\n        }\n    }, {\n        ident: 'deux',\n        props: {\n            color: 'green'\n        }\n    }, {\n        ident: 'trois',\n        props: {\n            color: 'blue'\n        }\n    }]\n\n    const getRandomNumber = (): number => {\n        const randomDecimal = Math.random();\n      \n        // Scale the random decimal to the range [0, 1, 2]\n        const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n      \n        return randomNumber;\n      };\n\n    useEffect(() => {\n        \n        const makeUniqueId = (base: String, i: String) => `${base}-${i}`;\n        let randomIdentForObject: string = ''\n        \n        // vyresit colors: any - zkusit nadefinovat vlastni typ\n        const randomColorIdentifier = (colors: any) => {\n            let randomArrayIndex = getRandomNumber();\n            // nekontroluju delku pole, vim, ze se vejdu\n            return colors[randomArrayIndex].ident;\n        }\n\n        const newArray: ObjectType[] = [];\n        const numberOfObjects = 5;\n        randomIdentForObject = randomColorIdentifier(colorIdents);\n\n        for (let i = 1; i <= numberOfObjects; i++) {\n            newArray.push({\n                id: makeUniqueId('random', i.toString()),\n                name: '',\n                description: '',\n                colorIdentifier: randomIdentForObject,\n            });\n        }\n\n        setObjectsArray([...newArray]);\n\n    }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n\n\n    console.log(objectsArray);\n\n    return (\n        <div>\n        <h2>Generated Objects:</h2>\n        <ul>\n          {objectsArray.map((object) => (\n            <li key={object.id}>{object.id} / {object.name} / {object.description} / {object.colorIdentifier}</li>\n          ))}\n        </ul>\n      </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}