{"ast":null,"code":"var _jsxFileName = \"/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\nexport default function App() {\n  _s();\n  const [objectsArray, setObjectsArray] = useState([]);\n  const colorIdents = [{\n    ident: 'un',\n    props: {\n      color: 'red'\n    }\n  }, {\n    ident: 'deux',\n    props: {\n      color: 'green'\n    }\n  }, {\n    ident: 'trois',\n    props: {\n      color: 'blue'\n    }\n  }];\n  const getRandomNumber = () => {\n    const randomDecimal = Math.random();\n\n    // Scale the random decimal to the range [0, 1, 2]\n    const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n    return randomNumber;\n  };\n  const makeUniqueId = (base, i) => `${base}-${i}`;\n\n  // vyresit colors: any - zkusit nadefinovat vlastni typ\n  const randomColorIdentifier = colors => {\n    let randomArrayIndex = getRandomNumber();\n    // nekontroluju delku pole, vim, ze se vejdu\n    return colors[randomArrayIndex].ident;\n  };\n  const inputFiltr = text => {\n    console.log('text z inputu: ' + text);\n  };\n  useEffect(() => {\n    const newArray = [];\n    const numberOfObjects = 5;\n    for (let i = 1; i <= numberOfObjects; i++) {\n      let randomIdentForObject = randomColorIdentifier(colorIdents);\n      newArray.push({\n        id: makeUniqueId('random', i.toString()),\n        name: '',\n        description: '',\n        colorIdentifier: randomIdentForObject\n      });\n    }\n    setObjectsArray([...newArray]);\n  }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n  console.log(objectsArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      className: \"input-filtr\",\n      onChange: e => inputFiltr(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"N\\xE1zev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Popis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Barevn\\xFD identifik\\xE1tor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: objectsArray.map(object => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.colorIdentifier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, object.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"j6iRF3X2vF2z8Z/xVmpr9EaV7SE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","objectsArray","setObjectsArray","colorIdents","ident","props","color","getRandomNumber","randomDecimal","Math","random","randomNumber","floor","makeUniqueId","base","i","randomColorIdentifier","colors","randomArrayIndex","inputFiltr","text","console","log","newArray","numberOfObjects","randomIdentForObject","push","id","toString","name","description","colorIdentifier","className","children","type","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","object","_c","$RefreshReg$"],"sources":["/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Console } from 'console';\n\ntype ObjectType = {\n    id: string;\n    name: string,\n    description: string,\n    colorIdentifier: string,\n    // zde pridat dalsi props\n}\n\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\n   \n\nexport default function App() {\n\n    const [objectsArray, setObjectsArray] = useState<ObjectType[]>([]); \n\n    const colorIdents = [{\n        ident: 'un',\n        props: {\n            color: 'red'\n        }\n    }, {\n        ident: 'deux',\n        props: {\n            color: 'green'\n        }\n    }, {\n        ident: 'trois',\n        props: {\n            color: 'blue'\n        }\n    }]\n\n    const getRandomNumber = (): number => {\n        const randomDecimal = Math.random();\n      \n        // Scale the random decimal to the range [0, 1, 2]\n        const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n        return randomNumber;\n    };\n\n    const makeUniqueId = (base: String, i: String) => `${base}-${i}`;\n\n    // vyresit colors: any - zkusit nadefinovat vlastni typ\n    const randomColorIdentifier = (colors: any) => {\n        let randomArrayIndex = getRandomNumber();\n        // nekontroluju delku pole, vim, ze se vejdu\n        return colors[randomArrayIndex].ident;\n    }    \n\n    const inputFiltr = (text: string) => {\n        console.log('text z inputu: ' + text);\n    }\n\n    useEffect(() => {\n\n        const newArray: ObjectType[] = [];\n        const numberOfObjects = 5;\n        \n        for (let i = 1; i <= numberOfObjects; i++) {\n            let randomIdentForObject: string = randomColorIdentifier(colorIdents);\n\n            newArray.push({\n                id: makeUniqueId('random', i.toString()),\n                name: '',\n                description: '',\n                colorIdentifier: randomIdentForObject,\n            });\n        }\n\n        setObjectsArray([...newArray]);\n\n    }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n\n\n    console.log(objectsArray);\n\n    return (\n        <div className='wrapper'>\n            <input type=\"text\" name=\"\" id=\"\" className='input-filtr' onChange={(e) => inputFiltr(e.target.value)} />\n\n            <table>\n\n                <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Název</th>\n                        <th>Popis</th>\n                        <th>Barevný identifikátor</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n\n                    {objectsArray.map((object) => (\n                        <tr key={object.id}>\n                            <td>{object.id}</td>\n                            <td>{object.name}</td>\n                            <td>{object.description}</td>\n                            <td>{object.colorIdentifier}</td>\n                        </tr>\n                    ))}\n                </tbody>\n\n            </table>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}