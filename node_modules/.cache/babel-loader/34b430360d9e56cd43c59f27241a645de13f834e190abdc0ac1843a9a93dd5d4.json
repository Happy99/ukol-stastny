{"ast":null,"code":"var _jsxFileName = \"/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\nexport default function App() {\n  _s();\n  const [objectsArray, setObjectsArray] = useState([]);\n  const [filteredObjectsArray, setfilteredObjectsArray] = useState([]);\n  const [objectsArrayToShow, setobjectsArrayToShow] = useState([]);\n  const colorIdents = [{\n    ident: 'un',\n    props: {\n      color: 'red'\n    }\n  }, {\n    ident: 'deux',\n    props: {\n      color: 'green'\n    }\n  }, {\n    ident: 'trois',\n    props: {\n      color: 'blue'\n    }\n  }];\n  const getRandomNumber = () => {\n    const randomDecimal = Math.random();\n\n    // Scale the random decimal to the range [0, 1, 2]\n    const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n    return randomNumber;\n  };\n  const makeUniqueId = (base, i) => `${base}-${i}`;\n\n  // vyresit colors: any - zkusit nadefinovat vlastni typ\n  const randomColorIdentifier = colors => {\n    let randomArrayIndex = getRandomNumber();\n    // nekontroluju delku pole, vim, ze se vejdu\n    return colors[randomArrayIndex].ident;\n  };\n\n  // filtruju podle barevneho identifikatoru\n  const inputFilter = inputValue => {\n    // if ( inputValue.length === 0 ) return setObjectsArray(objectsArrayClone);\n\n    inputValue = inputValue.replace(/\\s/g, '');\n    console.log('text z inputu: ' + inputValue);\n\n    // include asi snazsi, dalo by se dotahnout do stavu, kde by vzni\n    const filteredResult = objectsArray.filter(item => item.colorIdentifier.toLowerCase().includes(inputValue.toLowerCase()));\n    setObjectsArray(filteredResult);\n  };\n  useEffect(() => {\n    const newArray = [];\n    const numberOfObjects = 5;\n    for (let i = 1; i <= numberOfObjects; i++) {\n      let randomIdentForObject = randomColorIdentifier(colorIdents);\n      newArray.push({\n        id: makeUniqueId('random', i.toString()),\n        name: '',\n        description: '',\n        colorIdentifier: randomIdentForObject\n      });\n    }\n    setObjectsArray([...newArray]);\n    setobjectsArrayToShow([...newArray]);\n  }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n  console.log(objectsArray);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      className: \"input-filtr\",\n      onChange: e => inputFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"N\\xE1zev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Popis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Barevn\\xFD identifik\\xE1tor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: objectsArrayToShow.map(object => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: object.colorIdentifier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, object.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"WjAm3Bouk7dU8P9gTghmuS3XIQM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","objectsArray","setObjectsArray","filteredObjectsArray","setfilteredObjectsArray","objectsArrayToShow","setobjectsArrayToShow","colorIdents","ident","props","color","getRandomNumber","randomDecimal","Math","random","randomNumber","floor","makeUniqueId","base","i","randomColorIdentifier","colors","randomArrayIndex","inputFilter","inputValue","replace","console","log","filteredResult","filter","item","colorIdentifier","toLowerCase","includes","newArray","numberOfObjects","randomIdentForObject","push","id","toString","name","description","className","children","type","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","object","_c","$RefreshReg$"],"sources":["/Users/petrstastny/Desktop/testApps/safecontrol-ukol/ukol-stastny/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\ntype ObjectType = {\n    id: string;\n    name: string,\n    description: string,\n    colorIdentifier: string,\n    // zde pridat dalsi props\n}\n\n// type ColorIdentType = {\n//     ident: string,\n//     props: \n// }\n   \n\nexport default function App() {\n\n    const [objectsArray, setObjectsArray] = useState<ObjectType[]>([]);\n    const [filteredObjectsArray, setfilteredObjectsArray] = useState<ObjectType[]>([]);\n    const [objectsArrayToShow, setobjectsArrayToShow] = useState<ObjectType[]>([]);\n\n    const colorIdents = [{\n        ident: 'un',\n        props: {\n            color: 'red'\n        }\n    }, {\n        ident: 'deux',\n        props: {\n            color: 'green'\n        }\n    }, {\n        ident: 'trois',\n        props: {\n            color: 'blue'\n        }\n    }]\n\n    const getRandomNumber = (): number => {\n        const randomDecimal = Math.random();\n      \n        // Scale the random decimal to the range [0, 1, 2]\n        const randomNumber = Math.floor(randomDecimal * 3); // 3 because we want numbers from 0 to 2\n        return randomNumber;\n    };\n\n    const makeUniqueId = (base: String, i: String) => `${base}-${i}`;\n\n    // vyresit colors: any - zkusit nadefinovat vlastni typ\n    const randomColorIdentifier = (colors: any) => {\n        let randomArrayIndex = getRandomNumber();\n        // nekontroluju delku pole, vim, ze se vejdu\n        return colors[randomArrayIndex].ident;\n    }    \n\n    // filtruju podle barevneho identifikatoru\n    const inputFilter = (inputValue: string) => {\n        // if ( inputValue.length === 0 ) return setObjectsArray(objectsArrayClone);\n\n        inputValue = inputValue.replace(/\\s/g, '');\n        console.log('text z inputu: ' + inputValue);\n\n        // include asi snazsi, dalo by se dotahnout do stavu, kde by vzni\n        const filteredResult = objectsArray.filter((item) =>\n            item.colorIdentifier.toLowerCase().includes(inputValue.toLowerCase())\n        );\n\n        setObjectsArray(filteredResult);\n    }\n\n    useEffect(() => {\n\n        const newArray: ObjectType[] = [];\n        const numberOfObjects = 5;\n        \n        for (let i = 1; i <= numberOfObjects; i++) {\n            let randomIdentForObject: string = randomColorIdentifier(colorIdents);\n\n            newArray.push({\n                id: makeUniqueId('random', i.toString()),\n                name: '',\n                description: '',\n                colorIdentifier: randomIdentForObject,\n            });\n        }\n\n        setObjectsArray([...newArray]);\n        setobjectsArrayToShow([...newArray]);\n\n    }, []); //na konci prazdne pole, projde tedy pouze jednou pri page load\n\n\n\n    console.log(objectsArray);\n\n    return (\n        <div className='wrapper'>\n            <input type=\"text\" name=\"\" id=\"\" className='input-filtr' onChange={(e) => inputFilter(e.target.value)} />\n\n            <table>\n\n                <thead>\n                    <tr>\n                        <th>Id</th>\n                        <th>Název</th>\n                        <th>Popis</th>\n                        <th>Barevný identifikátor</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n\n                    {objectsArrayToShow.map((object) => (\n                        <tr key={object.id}>\n                            <td>{object.id}</td>\n                            <td>{object.name}</td>\n                            <td>{object.description}</td>\n                            <td>{object.colorIdentifier}</td>\n                        </tr>\n                    ))}\n                </tbody>\n\n            </table>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}